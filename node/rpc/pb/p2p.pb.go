// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: node/rpc/proto/p2p.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetListPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetListPeerRequest) Reset() {
	*x = GetListPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_rpc_proto_p2p_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListPeerRequest) ProtoMessage() {}

func (x *GetListPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_rpc_proto_p2p_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListPeerRequest.ProtoReflect.Descriptor instead.
func (*GetListPeerRequest) Descriptor() ([]byte, []int) {
	return file_node_rpc_proto_p2p_proto_rawDescGZIP(), []int{0}
}

type GetListPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListPeer []*Peer `protobuf:"bytes,1,rep,name=ListPeer,proto3" json:"ListPeer,omitempty"`
}

func (x *GetListPeerResponse) Reset() {
	*x = GetListPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_rpc_proto_p2p_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListPeerResponse) ProtoMessage() {}

func (x *GetListPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_rpc_proto_p2p_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListPeerResponse.ProtoReflect.Descriptor instead.
func (*GetListPeerResponse) Descriptor() ([]byte, []int) {
	return file_node_rpc_proto_p2p_proto_rawDescGZIP(), []int{1}
}

func (x *GetListPeerResponse) GetListPeer() []*Peer {
	if x != nil {
		return x.ListPeer
	}
	return nil
}

type GetListChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetListChannelRequest) Reset() {
	*x = GetListChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_rpc_proto_p2p_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListChannelRequest) ProtoMessage() {}

func (x *GetListChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_rpc_proto_p2p_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListChannelRequest.ProtoReflect.Descriptor instead.
func (*GetListChannelRequest) Descriptor() ([]byte, []int) {
	return file_node_rpc_proto_p2p_proto_rawDescGZIP(), []int{2}
}

type GetListChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListChannel []*Channel `protobuf:"bytes,1,rep,name=ListChannel,proto3" json:"ListChannel,omitempty"`
}

func (x *GetListChannelResponse) Reset() {
	*x = GetListChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_rpc_proto_p2p_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListChannelResponse) ProtoMessage() {}

func (x *GetListChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_rpc_proto_p2p_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListChannelResponse.ProtoReflect.Descriptor instead.
func (*GetListChannelResponse) Descriptor() ([]byte, []int) {
	return file_node_rpc_proto_p2p_proto_rawDescGZIP(), []int{3}
}

func (x *GetListChannelResponse) GetListChannel() []*Channel {
	if x != nil {
		return x.ListChannel
	}
	return nil
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_rpc_proto_p2p_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_rpc_proto_p2p_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_node_rpc_proto_p2p_proto_rawDescGZIP(), []int{4}
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ListPeer    []*Peer    `protobuf:"bytes,2,rep,name=ListPeer,proto3" json:"ListPeer,omitempty"`
	ListChannel []*Channel `protobuf:"bytes,3,rep,name=ListChannel,proto3" json:"ListChannel,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_rpc_proto_p2p_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_rpc_proto_p2p_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_node_rpc_proto_p2p_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConnectResponse) GetListPeer() []*Peer {
	if x != nil {
		return x.ListPeer
	}
	return nil
}

func (x *ConnectResponse) GetListChannel() []*Channel {
	if x != nil {
		return x.ListChannel
	}
	return nil
}

var File_node_rpc_proto_p2p_proto protoreflect.FileDescriptor

var file_node_rpc_proto_p2p_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x32, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1b,
	0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x38, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0xcc, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x65, 0x72, 0x54,
	0x6f, 0x50, 0x65, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x32, 0x35, 0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_rpc_proto_p2p_proto_rawDescOnce sync.Once
	file_node_rpc_proto_p2p_proto_rawDescData = file_node_rpc_proto_p2p_proto_rawDesc
)

func file_node_rpc_proto_p2p_proto_rawDescGZIP() []byte {
	file_node_rpc_proto_p2p_proto_rawDescOnce.Do(func() {
		file_node_rpc_proto_p2p_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_rpc_proto_p2p_proto_rawDescData)
	})
	return file_node_rpc_proto_p2p_proto_rawDescData
}

var file_node_rpc_proto_p2p_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_node_rpc_proto_p2p_proto_goTypes = []interface{}{
	(*GetListPeerRequest)(nil),     // 0: pb.GetListPeerRequest
	(*GetListPeerResponse)(nil),    // 1: pb.GetListPeerResponse
	(*GetListChannelRequest)(nil),  // 2: pb.GetListChannelRequest
	(*GetListChannelResponse)(nil), // 3: pb.GetListChannelResponse
	(*ConnectRequest)(nil),         // 4: pb.ConnectRequest
	(*ConnectResponse)(nil),        // 5: pb.ConnectResponse
	(*Peer)(nil),                   // 6: Peer
	(*Channel)(nil),                // 7: Channel
}
var file_node_rpc_proto_p2p_proto_depIdxs = []int32{
	6, // 0: pb.GetListPeerResponse.ListPeer:type_name -> Peer
	7, // 1: pb.GetListChannelResponse.ListChannel:type_name -> Channel
	6, // 2: pb.ConnectResponse.ListPeer:type_name -> Peer
	7, // 3: pb.ConnectResponse.ListChannel:type_name -> Channel
	4, // 4: pb.PeerToPeer.Connect:input_type -> pb.ConnectRequest
	0, // 5: pb.PeerToPeer.GetListPeer:input_type -> pb.GetListPeerRequest
	2, // 6: pb.PeerToPeer.GetListChannel:input_type -> pb.GetListChannelRequest
	5, // 7: pb.PeerToPeer.Connect:output_type -> pb.ConnectResponse
	1, // 8: pb.PeerToPeer.GetListPeer:output_type -> pb.GetListPeerResponse
	1, // 9: pb.PeerToPeer.GetListChannel:output_type -> pb.GetListPeerResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_node_rpc_proto_p2p_proto_init() }
func file_node_rpc_proto_p2p_proto_init() {
	if File_node_rpc_proto_p2p_proto != nil {
		return
	}
	file_node_rpc_proto_struct_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_node_rpc_proto_p2p_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_rpc_proto_p2p_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_rpc_proto_p2p_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_rpc_proto_p2p_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_rpc_proto_p2p_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_rpc_proto_p2p_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_rpc_proto_p2p_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_rpc_proto_p2p_proto_goTypes,
		DependencyIndexes: file_node_rpc_proto_p2p_proto_depIdxs,
		MessageInfos:      file_node_rpc_proto_p2p_proto_msgTypes,
	}.Build()
	File_node_rpc_proto_p2p_proto = out.File
	file_node_rpc_proto_p2p_proto_rawDesc = nil
	file_node_rpc_proto_p2p_proto_goTypes = nil
	file_node_rpc_proto_p2p_proto_depIdxs = nil
}
