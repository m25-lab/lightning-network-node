syntax = "proto3";

package channel;

option go_package = "github.com/m25-lab/lightning-network-node/node/rpc/pb";

service ChannelService {
    rpc OpenChannel (OpenChannelRequest) returns (OpenChannelResponse) {}
    rpc GetChannels (GetChannelsRequest) returns (GetChannelsResponse) {}
    rpc GetChannelById (GetChannelRequest) returns (GetChannelResponse) {}
    rpc CreateCommitment(CreateCommitmentRequest) returns (CreateCommitmentResponse) {}
    rpc WithdrawHashlock(WithdrawHashlockRequest) returns (WithdrawHashlockResponse) {}
    rpc WithdrawTimelock(WithdrawTimelockRequest) returns (WithdrawTimelockResponse) {}
}

message OpenChannelRequest {
    string fromAddress = 1;
    string toAddress = 2;
    string signature = 3;
    string payload = 4;
}

message OpenChannelResponse {
    string response = 1;
}

message CreateCommitmentRequest {
    string channelId = 1;
    string fromAddress = 2;
    string fromHashCode = 3;
    string fromPayload = 4;
    string fromSignature = 5;
    string toAddress = 6;
    string toHashcode = 7;
    string toPayload = 8;
    string toSignature = 9;
}

message CreateCommitmentResponse {
    string response = 1;
}

message WithdrawHashlockRequest{
    string accountTo = 1;
    string index = 2;
    string secret = 3;
}

message WithdrawHashlockResponse {
    string response = 1;
}

message WithdrawTimelockRequest{
    string accountTo = 1;
    string index = 2;
}

message WithdrawTimelockResponse {
    string response = 1;
}

message GetChannelsRequest {
    string address = 1;
}
message GetChannelsResponse {
    repeated GetChannelResponse rows = 1;
}

message GetChannelRequest {
    string id = 1;
}
message GetChannelResponse {
    string id = 1;
    string status = 2;
    string fromAddress = 3;
    string toAddress = 4;
    string signatureA = 5;
    string signatureB = 6;
    string payload = 7;
}
